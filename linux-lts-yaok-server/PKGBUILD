# Maintainer: gontier-julien <gontierjulien68@gmail.com>

_major=5.10
_minor=80
pkgbase=linux-lts-server-yaok
pkgver=${_major}.${_minor}
pkgrel=1
pkgdesc='Security-Hardened Linux-lts YAOK, Optimized for Server'
url='https://gitlab.com/alfredchen/linux-prjc'
arch=(x86_64 x86_64_v3)
license=(GPL2)
makedepends=(bc kmod libelf pahole cpio perl tar xz 
             xmlto python-sphinx python-sphinx_rtd_theme graphviz imagemagick)
options=('!strip')
_srcname=linux-${pkgver}
_patchsource="https://raw.githubusercontent.com/sirlucjan/kernel-patches/master/5.10"
_archpatch="https://raw.githubusercontent.com/archlinux/svntogit-packages/packages/linux-lts/trunk"
_xanpatch="https://raw.githubusercontent.com/xanmod/linux-patches/master/linux-5.10.y-xanmod"
source=(
  "https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-${pkgver}.tar.xz"
  "https://gitlab.com/alfredchen/projectc/-/raw/master/5.10-lts/prjc_v5.10-lts-r3.patch"
  "https://gitlab.com/alfredchen/linux-prjc/uploads/eab8442acae2744f531fda205d8c8c53/prjc-20211115-update-sched_post_fork__-signature.patch" # backport temporary fix
  "https://raw.githubusercontent.com/sirlucjan/kernel-patches/master/5.15/spectre-patches/0001-spectre-patches.patch" # backport
  "${_archpatch}/0001-ZEN-Add-sysctl-and-CONFIG-to-disallow-unprivileged-C.patch"
  "${_archpatch}/0002-gcc-plugins-modern-gcc-plugin-infrastructure-requres.patch"
  "${_xanpatch}/xanmod/0006-dcache-cache_pressure-50-decreases-the-rate-at-which.patch"
  "${_xanpatch}/xanmod/0010-scripts-disable-the-localversion-tag-of-a-git-repo.patch"
  "${_xanpatch}/lrng/0001-drivers-char-Introduce-the-Linux-Random-Number-Gener.patch"
  "${_xanpatch}/lrng/0002-char-lrng-IRQ-entropy-source.patch"
  "${_xanpatch}/lrng/0003-char-lrng-sysctls-and-proc-interface.patch"
  "${_xanpatch}/lrng/0004-char-lrng-allocate-one-DRNG-instance-per-NUMA-node.patch"
  "${_xanpatch}/lrng/0005-char-lrng-CPU-entropy-source.patch"
  "${_xanpatch}/lrng/0006-char-lrng-add-switchable-DRNG-support.patch"
  "${_xanpatch}/lrng/0007-char-lrng-add-common-generic-hash-support.patch"
  "${_xanpatch}/lrng/0008-crypto-drbg-externalize-DRBG-functions-for-LRNG.patch"
  "${_xanpatch}/lrng/0009-char-lrng-add-SP800-90A-DRBG-extension.patch"
  "${_xanpatch}/lrng/0010-char-lrng-add-kernel-crypto-API-PRNG-extension.patch"
  "${_xanpatch}/lrng/0011-crypto-move-Jitter-RNG-header-include-dir.patch"
  "${_xanpatch}/lrng/0012-char-lrng-add-Jitter-RNG-fast-noise-source.patch"
  "${_xanpatch}/lrng/0013-char-lrng-add-SP800-90B-compliant-health-tests.patch"
  "${_xanpatch}/lrng/0014-char-lrng-add-interface-for-gathering-of-raw-entropy.patch"
  "${_xanpatch}/lrng/0015-char-lrng-add-power-on-and-runtime-self-tests.patch"
  "${_patchsource}/bbr2-patches-v3/0001-bbr2-5.10-introduce-BBRv2.patch"
  "${_patchsource}/lqx-patches-v4-sep/0002-zen-Allow-MSR-writes-by-default.patch"
  "${_patchsource}/fixes-miscellaneous-v11-sep/0003-kbuild-add-fcf-protection-none-to-retpoline-flags.patch"
  "${_patchsource}/fixes-miscellaneous-v11-sep/0004-mm-Disable-watermark-boosting-by-default.patch"
  "${_patchsource}/fixes-miscellaneous-v11-sep/0005-mm-Stop-kswapd-early-when-nothing-s-waiting-for-it-t.patch"
  "${_patchsource}/fixes-miscellaneous-v11-sep/0006-mm-Fully-disable-watermark-boosting-when-it-isn-t-us.patch"
  "${_patchsource}/fixes-miscellaneous-v11-sep/0008-kbuild-Disable-stack-conservation-for-GCC.patch"
  "${_patchsource}/fixes-miscellaneous-v11-sep/0012-scsi-sd-Optimal-I-O-size-should-be-a-multiple-of-rep.patch"
  "${_patchsource}/block-patches-v3-sep/0003-block-set-rq_affinity-2-for-full-multithreading-I-O.patch"
  "${_patchsource}/zstd-patches-v3/0001-init-add-support-for-zstd-compressed-modules.patch"
  "${_patchsource}/zstd-upstream-patches/0001-zstd-upstream-patches.patch"
  "config"         # the main kernel config file
)
sha256sums=('477ce8f7624263e4346c0fc25ffc334af06bcac4d6bebdd5a7fe4681557fdb39' #Linux 5.10.80
            'f4562c31658d7e18dbbfc3220bc5350fc896e6d338714420533a3df8642778d1' # BMQ patch
            '6fdc2a8e55676c87040beb2c13ed6da5dc45984e1e02d1541a785075a98985ef' # backport temporary fix
            '902c3dda6ab6e3907b6bd35b450714d8c2db5d112fa245f442a96880da815d96' # Follow upstream patch [5.16](https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git/commit/?h=for-next/seccomp&id=2f46993d83ff4abb310ef7b4beced56ba96f0d9d)
            '96a72e1652314215da7140956c3abcf495cafd00811eda3cf4ce03ec5f791f1e' # arch patch zen
            'bb935ad2467637966185b88d18a3f9be2f37d3acdc71ed361eae326ca898d6fc' # arch patch gcc
            'a819d178c0ad8d626743ba3062774b4463b8d9e43fa8fcddcc729c88d25c1905' # Xanmod patch 1
            '57274cbc9065176dc86ba1265de53ab9738a47e035b0dd6e22c8e9a31eb1340b' # Xanmod patch 2
            'db3a44f4d86a3b10acd203832218f5f5b0948164d3504ecb0350d47795c3f2f2' # Lrng patch 1
            '60d2bf8a50c767982e3919fafa8108b40314e34051d164b7b6c87a5ee0816d72' # Lrng patch 2
            '3da70739f666f388783a4ac1787deb9dbae425e3bf91788667c256ccbeb56f72' # Lrng patch 3
            '1194561ac4c54ef6a2010c559ad02e8eeffa7ed6182d11db15d790e0211afd8b' # Lrng patch 4
            '42f7002632459f12bd92e0dc593ca56fadd0490a6a83723a552fd8ecec46551e' # Lrng patch 5
            '2cd5c8005b45f689b9d562266d584ce461ff16c41a5c8aaa93818260467fdd9a' # Lrng patch 6
            '134d553062bd0d1c4c00a277f87d7dc91a1f8f14696467e54df4a3452c086596' # Lrng patch 7
            'fb892565669ef1de0e5c3f8094cbc83a72d89f98b34cf1845c59bf5347c1e698' # Lrng patch 8
            '18f389bd1faf8769495587378aba07fcf28f165403450bafeb6d477bb67dbb83' # Lrng patch 9
            'b8f69003d6de49f97bda73ea8c5fa11ba755ac357d0de60d2abd06be4189de4a' # Lrng patch 10
            '6d9e650ad06952da808f16be63b290e9fa841e1fab419f343c645f3c73499361' # Lrng patch 11
            '35fb5ea1b884c0dbb17d68d3e2d4f51711407f9f797a6554a008ac60486e4ddb' # Lrng patch 12
            '2c91cd20a129bd1c6d43516ab531505e65f6d34848590194026be8f349ae5177' # Lrng patch 13
            '189f49a4e454b1b2ce4ee4baa30eecf643596b1b64fd807eb79f3bc0938665d4' # Lrng patch 14
            '690de39a89f562b3dcf01b4dc8b64faa9855656c0c765a7d2e5946178fb1e1f9' # Lrng patch 15
            '167d1732e57601dece7eec95d22bcbc43b1b2815fd73182933c1757abe7189b7' # BBR2 patch
            '4fca3c8fd9e30b161b1700614b4a2c96346706dabfb3c5e290e892482ba00cd0' # lqx patch for MSR
            '451733f8a794356769a9359f0171d9378bb8129edc8892385fee016da73bb3da' # Fixes patch 1
            '6a92eb2a9a8b480b0b412563c301e2343022b42db1ddd8fd2d6b4ed6a7424c06' # Fixes patch 2
            '0740cfe84aba7776823f4d804384266391edec05672fafd456b42486362d5666' # Fixes patch 3
            'da18f29b70ef25114b09a92107d1ea22d3485578a75b08afa896dbee6a0e8276' # Fixes patch 4
            '98970e9eb43d1b5b0fc6486834ff9c418e7821fe0487f23acdcb7bf13a1460bb' # Fixes patch 5
            'e0a7d59c339dc4ac9aa98a1e192d6f6bf2d8c12e67838dbacc13aeab72799edf' # Fixes patch 6
            'fb8328b049abe6d15def1221de8177ebcb7492b596c361c52230f4cc7ca3bfd7' # multithreading I/O patch
            '2ba659db7ecf3f8349dfd65012c0aa156fedee2877a0f8c6d95c76fdb19b3583' # Zstd patch
            '137811c7d916c608f9ebb7e4d82ec93ea7592d99fe6394cf908c0e12e9881a7d' # Upstream Zstd patch
            'SKIP') #config

BUILD_FLAGS=(
  LLVM=1
  LLVM_IAS=1
)

export KBUILD_BUILD_HOST=archlinux
export KBUILD_BUILD_USER=$pkgbase
export KBUILD_BUILD_TIMESTAMP="$(date -Ru${SOURCE_DATE_EPOCH:+d @$SOURCE_DATE_EPOCH})"

prepare() {
  cd $_srcname

  echo "Setting version..."
  scripts/setlocalversion --save-scmversion
  echo "-$pkgrel" > localversion.10-pkgrel
  echo "${pkgbase#linux}" > localversion.20-pkgname

  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    echo "Applying patch $src..."
    patch -Np1 < "../$src"
  done

  echo "Setting config..."
  cp ../config .config
#  make prepare
  make ${BUILD_FLAGS[*]} olddefconfig

  make -s kernelrelease > version
  echo "Prepared $pkgbase version $(<version)"

  # CONFIG_STACK_VALIDATION gives better stack traces. Also is enabled in all official kernel packages by Archlinux team
  scripts/config --enable CONFIG_STACK_VALIDATION

  echo -e "\033[0;32mEnabling BMQ Scheduler..."
  scripts/config --enable CONFIG_SCHED_ALT
  scripts/config --enable CONFIG_SCHED_BMQ
  scripts/config --disable CONFIG_SCHED_PDS

  echo -e "\033[0;31mDisabling GCC Plugins..."
  scripts/config --disable CONFIG_GCC_PLUGINS

  echo -e "\033[0;32mEnabling KBUILD_CFLAGS -O3..."
  scripts/config --disable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE
  scripts/config --enable CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3

  echo -e "\033[0;32mEnabling LLVM Thin-LTO..."
  scripts/config --disable CONFIG_LTO_NONE
  scripts/config -e LTO_CLANG_THIN 
  echo -e "\033[0;32mEnabling Clang PGO..."
  scripts/config --enable CONFIG_ARCH_SUPPORTS_PGO_CLANG
  scripts/config --enable DEBUG_FS
  scripts/config --enable CONFIG_PGO_CLANG

  echo -e "\033[0;32mHardening Linux Kernel..."
#  scripts/config --disable CONFIG_SYSVIPC #bug with fakeroot
  scripts/config --enable CONFIG_DEBUG_FS_ALLOW_NONE
  scripts/config --enable CONFIG_SECURITY_SELINUX
  scripts/config --enable CONFIG_SECURITY_APPARMOR
  scripts/config --set-str CONFIG_LSM lockdown,yama,integrity

  echo -e "\033[0;31mDisabling TOMOYO..."
  scripts/config --disable CONFIG_SECURITY_TOMOYO
  echo -e "\033[0;31mDisabling YAMA..."
  scripts/config --disable CONFIG_SECURITY_YAMA
  scripts/config --set-str CONFIG_LSM lockdown,integrity,apparmor

  echo -e "\033[0;31mDisabling Open-Channel SSD NVM..." # delete since 5.15
  scripts/config --disable CONFIG_NVM

  echo -e "\033[0;31mDisabling NUMA by default..."
  scripts/config --disable CONFIG_NUMA
  echo -e "\033[0;31mDisabling TCP_CONG_CUBIC..."
  scripts/config --module CONFIG_TCP_CONG_CUBIC
  scripts/config --disable CONFIG_DEFAULT_CUBIC
  echo -e "\033[0;31mDisabling TCP_CONG_RENO..."
  scripts/config --module CONFIG_TCP_CONG_RENO
  scripts/config --disable CONFIG_DEFAULT_RENO
  echo -e "\033[0;32mEnabling TCP_CONG_BBR2..."
  scripts/config --enable CONFIG_TCP_CONG_BBR2
  scripts/config --enable CONFIG_DEFAULT_BBR2
  scripts/config --set-str CONFIG_DEFAULT_TCP_CONG bbr2
  echo -e "\033[0;32mSetting performance governor..."
  scripts/config --disable CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
  scripts/config --enable CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE
  echo -e "\033[0;31mDisabling uneeded governors..."
  scripts/config --disable CONFIG_CPU_FREQ_GOV_ONDEMAND
  scripts/config --disable CONFIG_CPU_FREQ_GOV_CONSERVATIVE
  scripts/config --disable CONFIG_CPU_FREQ_GOV_USERSPACE
  scripts/config --disable CONFIG_CPU_FREQ_GOV_SCHEDUTIL

  echo -e "\033[0;32mEnabling standard ZSTD compression ratio..."
  scripts/config --set-val CONFIG_KERNEL_ZSTD_LEVEL 19
  scripts/config --disable CONFIG_KERNEL_ZSTD_LEVEL_ULTRA
  echo -e "\033[0;32mEnabling standard ZSTD module compression ratio..."
  scripts/config --set-val CONFIG_MODULE_COMPRESS_ZSTD_LEVEL 19
  scripts/config --disable CONFIG_MODULE_COMPRESS_ZSTD_ULTRA

#  echo -e "\033[0;32mEnable PREEMPT..."        Not for server use
#  scripts/config --disable CONFIG_PREEMPT_NONE
#  scripts/config --disable CONFIG_PREEMPT_VOLUNTARY
#  scripts/config --enable CONFIG_PREEMPT
#  scripts/config --enable CONFIG_PREEMPT_COUNT
#  scripts/config --enable CONFIG_PREEMPTION
#  scripts/config --enable CONFIG_PREEMPT_DYNAMIC

  echo -e "\033[0;32mEnabling multigenerational LRU..."
  scripts/config --enable CONFIG_HAVE_ARCH_PARENT_PMD_YOUNG
  scripts/config --enable CONFIG_LRU_GEN
  scripts/config --set-val CONFIG_NR_LRU_GENS 7
  scripts/config --set-val CONFIG_TIERS_PER_GEN 4
  scripts/config --enable CONFIG_LRU_GEN_ENABLED
  scripts/config --disable CONFIG_LRU_GEN_STATS

  echo -e "\033[0;31mDisabling some additional debuging..."
  scripts/config --disable CONFIG_DEBUG_BUGVERBOSE
}

build() {
  cd $_srcname
  make ${BUILD_FLAGS[*]} -j$(nproc) all
}

_package() {
  pkgdesc="The $pkgdesc kernel and modules"
  depends=(coreutils kmod initramfs)
  optdepends=('crda: to set the correct wireless channels of your country'
              'linux-firmware: firmware images needed for some devices'
              'usbctl: deny_new_usb control')
  provides=(VIRTUALBOX-GUEST-MODULES WIREGUARD-MODULE)

  cd $_srcname
  local kernver="$(<version)"
  local modulesdir="$pkgdir/usr/lib/modules/$kernver"

  echo "Installing boot image..."
  # systemd expects to find the kernel here to allow hibernation
  # https://github.com/systemd/systemd/commit/edda44605f06a41fb86b7ab8128dcf99161d2344
  install -Dm644 "$(make -s image_name)" "$modulesdir/vmlinuz"

  # Used by mkinitcpio to name the kernel
  echo "$pkgbase" | install -Dm644 /dev/stdin "$modulesdir/pkgbase"

  echo "Installing modules..."
  make INSTALL_MOD_PATH="$pkgdir/usr" INSTALL_MOD_STRIP=1 modules_install

  # remove build and source links
  rm "$modulesdir"/{source,build}
}

_package-headers() {
  pkgdesc="Headers and scripts for building modules for the $pkgdesc kernel"

  cd $_srcname
  local builddir="$pkgdir/usr/lib/modules/$(<version)/build"

  echo "Installing build files..."
  install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
    localversion.* version vmlinux
  install -Dt "$builddir/kernel" -m644 kernel/Makefile
  install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
  cp -t "$builddir" -a scripts

  # add objtool for external module building and enabled VALIDATION_STACK option
  install -Dt "$builddir/tools/objtool" tools/objtool/objtool

  # add xfs and shmem for aufs building
  mkdir -p "$builddir"/{fs/xfs,mm}

  echo "Installing headers..."
  cp -t "$builddir" -a include
  cp -t "$builddir/arch/x86" -a arch/x86/include
  install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

  install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
  install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

  # http://bugs.archlinux.org/task/13146
  install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

  # http://bugs.archlinux.org/task/20402
  install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
  install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
  install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

  echo "Installing KConfig files..."
  find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

  echo "Removing unneeded architectures..."
  local arch
  for arch in "$builddir"/arch/*/; do
    [[ $arch = */x86/ ]] && continue
    echo "Removing $(basename "$arch")"
    rm -r "$arch"
  done

  echo "Removing documentation..."
  rm -r "$builddir/Documentation"

  echo "Removing broken symlinks..."
  find -L "$builddir" -type l -printf 'Removing %P\n' -delete

  echo "Removing loose objects..."
  find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

  echo "Stripping build tools..."
  local file
  while read -rd '' file; do
    case "$(file -bi "$file")" in
      application/x-sharedlib\;*)      # Libraries (.so)
        strip -v $STRIP_SHARED "$file" ;;
      application/x-archive\;*)        # Libraries (.a)
        strip -v $STRIP_STATIC "$file" ;;
      application/x-executable\;*)     # Binaries
        strip -v $STRIP_BINARIES "$file" ;;
      application/x-pie-executable\;*) # Relocatable binaries
        strip -v $STRIP_SHARED "$file" ;;
    esac
  done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

  echo "Stripping vmlinux..."
  strip -v $STRIP_STATIC "$builddir/vmlinux"

  echo "Adding symlink..."
  mkdir -p "$pkgdir/usr/src"
  ln -sr "$builddir" "$pkgdir/usr/src/$pkgbase"
}

pkgname=("$pkgbase" "$pkgbase-headers" )
for _p in "${pkgname[@]}"; do
  eval "package_$_p() {
    $(declare -f "_package${_p#$pkgbase}")
    _package${_p#$pkgbase}
  }"
done
